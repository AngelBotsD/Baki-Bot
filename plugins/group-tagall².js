const handler = async (m, { conn, participants, isAdmin, isOwner }) => {
  if (!m.isGroup) return;
  if (!isAdmin && !isOwner) return global.dfail?.('admin', m, conn);

  const total = participants.length;

  // === MAPA DE LADAS ‚Üí BANDERAS ===
  const flags = {
    '1': 'üá∫üá∏', '7': 'üá∑üá∫', '20': 'üá™üá¨', '27': 'üáøüá¶', '30': 'üá¨üá∑', '31': 'üá≥üá±',
    '32': 'üáßüá™', '33': 'üá´üá∑', '34': 'üá™üá∏', '36': 'üá≠üá∫', '39': 'üáÆüáπ', '40': 'üá∑üá¥',
    '41': 'üá®üá≠', '43': 'üá¶üáπ', '44': 'üá¨üáß', '45': 'üá©üá∞', '46': 'üá∏üá™', '47': 'üá≥üá¥',
    '48': 'üáµüá±', '49': 'üá©üá™', '51': 'üáµüá™', '52': 'üá≤üáΩ', '53': 'üá®üá∫', '54': 'üá¶üá∑',
    '55': 'üáßüá∑', '56': 'üá®üá±', '57': 'üá®üá¥', '58': 'üáªüá™', '60': 'üá≤üáæ', '61': 'üá¶üá∫',
    '62': 'üáÆüá©', '63': 'üáµüá≠', '64': 'üá≥üáø', '65': 'üá∏üá¨', '66': 'üáπüá≠', '81': 'üáØüáµ',
    '82': 'üá∞üá∑', '84': 'üáªüá≥', '86': 'üá®üá≥', '90': 'üáπüá∑', '91': 'üáÆüá≥', '92': 'üáµüá∞',
    '93': 'üá¶üá´', '94': 'üá±üá∞', '95': 'üá≤üá≤', '98': 'üáÆüá∑', '212': 'üá≤üá¶', '213': 'üá©üáø',
    '216': 'üáπüá≥', '218': 'üá±üáæ', '233': 'üá¨üá≠', '234': 'üá≥üá¨', '255': 'üáπüáø',
    '256': 'üá∫üá¨', '260': 'üáøüá≤', '263': 'üáøüáº', '351': 'üáµüáπ', '352': 'üá±üá∫',
    '353': 'üáÆüá™', '354': 'üáÆüá∏', '355': 'üá¶üá±', '356': 'üá≤üáπ', '358': 'üá´üáÆ',
    '359': 'üáßüá¨', '370': 'üá±üáπ', '371': 'üá±üáª', '372': 'üá™üá™', '373': 'üá≤üá©',
    '374': 'üá¶üá≤', '380': 'üá∫üá¶', '381': 'üá∑üá∏', '385': 'üá≠üá∑', '420': 'üá®üáø',
    '421': 'üá∏üá∞', '502': 'üá¨üáπ', '503': 'üá∏üáª', '504': 'üá≠üá≥', '505': 'üá≥üáÆ',
    '506': 'üá®üá∑', '507': 'üáµüá¶', '509': 'üá≠üáπ', '591': 'üáßüá¥', '593': 'üá™üá®',
    '595': 'üáµüáæ', '598': 'üá∫üáæ'
    // puedes seguir rellenando con la lista ITU completa si quieres
  };

  // üîß Funci√≥n para normalizar un n√∫mero DS6
  function normalizar(num) {
    if (num.startsWith('521')) return '52' + num.slice(3); // M√©xico
    if (num.startsWith('549')) return '54' + num.slice(3); // Argentina
    if (num.startsWith('573')) return '57' + num.slice(3); // Colombia
    if (num.startsWith('569')) return '56' + num.slice(3); // Chile
    return num;
  }

  let texto = `*!  MENCION GENERAL  !*\n`;
  texto += `   *PARA ${total} MIEMBROS* üîî\n\n`;

  for (const user of participants) {
    let numero = user.id.split('@')[0];
    numero = normalizar(numero);

    // quitar "+" si existe
    const lada = numero.startsWith('+') ? numero.slice(1) : numero;

    // buscar prefijo m√°s largo posible
    const ladaMatch = Object.keys(flags)
      .sort((a, b) => b.length - a.length)
      .find(code => lada.startsWith(code));

    const flag = ladaMatch ? flags[ladaMatch] : 'üö©';

    texto += `‚îä¬ª ${flag} @${numero}\n`;
  }

  await conn.sendMessage(m.chat, { react: { text: 'üîä', key: m.key } });

  await conn.sendMessage(m.chat, {
    text: texto,
    mentions: participants.map(p => p.id)
  }, { quoted: m });
};

handler.customPrefix = /^\.?(todos|invocar|invocacion|invocaci√≥n)$/i;
handler.command = new RegExp();
handler.group = true;
handler.admin = true;

export default handler;